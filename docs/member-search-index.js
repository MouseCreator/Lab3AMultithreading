memberSearchIndex = [{"p":"org.example.examples.benchmark","c":"BenchmarkRunner","l":"BenchmarkRunner()","u":"%3Cinit%3E()"},{"p":"org.example.examples.fibonacci","c":"FibonacciTask","l":"call()"},{"p":"org.example.examples.quicksort","c":"SortedChecker","l":"check(int, int)","u":"check(int,int)"},{"p":"org.example.examples.quicksort","c":"SortedChecker","l":"clear()"},{"p":"org.example.examples.mergesort","c":"ListMerger","l":"clearAndMerge(List<T>, List<T>, List<T>)","u":"clearAndMerge(java.util.List,java.util.List,java.util.List)"},{"p":"org.example.examples.fibonacci","c":"FibonacciRecursiveTask","l":"compute()"},{"p":"org.example.examples.quicksort","c":"SorterPoolTask","l":"compute()"},{"p":"org.example.examples.quicksort","c":"QuickSortThreadFactory","l":"createThread(ListQuickSorter<T>, int, int)","u":"createThread(org.example.examples.quicksort.ListQuickSorter,int,int)"},{"p":"org.example.examples.mergesort","c":"MergeThreadFactory","l":"createThread(MergeSortListSorter<T>, List<T>)","u":"createThread(org.example.examples.mergesort.MergeSortListSorter,java.util.List)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.MergeMultiThread","l":"doSetUp()"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.MergeSingleThread","l":"doSetUp()"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.QuickMultiThread","l":"doSetUp()"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.QuickSingleThread","l":"doSetUp()"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.SorterState","l":"doSetUp()"},{"p":"org.example.examples.fibonacci","c":"FibonacciConsistentSequence","l":"FibonacciConsistentSequence()","u":"%3Cinit%3E()"},{"p":"org.example.examples.fibonacci","c":"FibonacciForkJoinSequence","l":"FibonacciForkJoinSequence()","u":"%3Cinit%3E()"},{"p":"org.example.examples.fibonacci","c":"FibonacciMultiThreadSequence","l":"FibonacciMultiThreadSequence()","u":"%3Cinit%3E()"},{"p":"org.example.examples.fibonacci","c":"FibonacciRecursiveTask","l":"FibonacciRecursiveTask(int)","u":"%3Cinit%3E(int)"},{"p":"org.example.examples.fibonacci","c":"FibonacciSimulatorTimeMeasure","l":"FibonacciSimulatorTimeMeasure(FibonacciSimulator)","u":"%3Cinit%3E(org.example.examples.fibonacci.FibonacciSimulator)"},{"p":"org.example.examples.fibonacci","c":"FibonacciTask","l":"FibonacciTask(int)","u":"%3Cinit%3E(int)"},{"p":"org.example.examples.fibonacci","c":"FibonacciConsistentSequence","l":"getFibonacciNumber(int)"},{"p":"org.example.examples.fibonacci","c":"FibonacciForkJoinSequence","l":"getFibonacciNumber(int)"},{"p":"org.example.examples.fibonacci","c":"FibonacciMultiThreadSequence","l":"getFibonacciNumber(int)"},{"p":"org.example.examples.fibonacci","c":"FibonacciSimulator","l":"getFibonacciNumber(int)"},{"p":"org.example.examples.fibonacci","c":"FibonacciSimulatorTimeMeasure","l":"getFibonacciNumber(int)"},{"p":"org.example.examples","c":"SorterTimeMeasureDecorator","l":"getLastTimeCheckingMillis()"},{"p":"org.example.examples.fibonacci","c":"FibonacciSimulatorTimeMeasure","l":"getLastTimeMillis()"},{"p":"org.example.examples","c":"SorterTimeMeasureDecorator","l":"getLastTimeSortingMillis()"},{"p":"org.example.examples.quicksort","c":"SortedChecker","l":"getSortedFlag()"},{"p":"org.example.examples.mergesort","c":"MergeThreadFactory","l":"hasAvailableThread()"},{"p":"org.example.examples.quicksort","c":"QuickSortThreadFactory","l":"hasAvailableThread()"},{"p":"org.example.examples.quicksort","c":"SharedSortedChecker","l":"isSorted(Comparator<T>, List<T>)","u":"isSorted(java.util.Comparator,java.util.List)"},{"p":"org.example.examples.mergesort","c":"ListMerger","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.mergesort","c":"MergeSortMultiThread","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.mergesort","c":"MergeSortSingleThread","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.mergesort","c":"MergeSortTwoThreads","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.quicksort","c":"LibSorter","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.quicksort","c":"SorterPool","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.quicksort","c":"SorterPoolLazy","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.quicksort","c":"SorterSingleThread","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples","c":"Sorter","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples","c":"SorterTimeMeasureDecorator","l":"isSorted(List<T>)","u":"isSorted(java.util.List)"},{"p":"org.example.examples.quicksort","c":"IsSortedRunnable","l":"IsSortedRunnable(SortedChecker<T>, int, int)","u":"%3Cinit%3E(org.example.examples.quicksort.SortedChecker,int,int)"},{"p":"org.example.examples.mergesort","c":"ListMerger","l":"librarySort(List<T>)","u":"librarySort(java.util.List)"},{"p":"org.example.examples.quicksort","c":"LibSorter","l":"LibSorter(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.SorterState","l":"list"},{"p":"org.example.examples.mergesort","c":"ListMerger","l":"ListMerger(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"org.example.examples.benchmark","c":"BenchmarkRunner","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.example","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.example.examples.mergesort","c":"ListMerger","l":"merge(List<T>, List<T>, List<T>)","u":"merge(java.util.List,java.util.List,java.util.List)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.MergeMultiThread","l":"MergeMultiThread()","u":"%3Cinit%3E()"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.MergeSingleThread","l":"MergeSingleThread()","u":"%3Cinit%3E()"},{"p":"org.example.examples.mergesort","c":"MergeSortListSorter","l":"MergeSortListSorter(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.mergesort","c":"MergeSortMultiThread","l":"MergeSortMultiThread(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.mergesort","c":"MergeSortSingleThread","l":"MergeSortSingleThread(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.mergesort","c":"MergeSortTwoThreads","l":"MergeSortTwoThreads(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.mergesort","c":"MergeThreadFactory","l":"MergeThreadFactory()","u":"%3Cinit%3E()"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.SorterState","l":"N"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.QuickMultiThread","l":"QuickMultiThread()","u":"%3Cinit%3E()"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.QuickSingleThread","l":"QuickSingleThread()","u":"%3Cinit%3E()"},{"p":"org.example.examples.quicksort","c":"QuickSortRunnable","l":"QuickSortRunnable(ListQuickSorter<T>, int, int)","u":"%3Cinit%3E(org.example.examples.quicksort.ListQuickSorter,int,int)"},{"p":"org.example.examples.quicksort","c":"QuickSortThreadFactory","l":"QuickSortThreadFactory()","u":"%3Cinit%3E()"},{"p":"org.example.examples.mergesort","c":"MergeThreadFactory","l":"restart()"},{"p":"org.example.examples.quicksort","c":"QuickSortThreadFactory","l":"restart()"},{"p":"org.example.examples.mergesort","c":"SortRunnable","l":"run()"},{"p":"org.example.examples.mergesort","c":"TwoThreadsRunnable","l":"run()"},{"p":"org.example.examples.quicksort","c":"IsSortedRunnable","l":"run()"},{"p":"org.example.examples.quicksort","c":"QuickSortRunnable","l":"run()"},{"p":"org.example.examples.quicksort","c":"SorterPoolTaskLazyThread","l":"run()"},{"p":"org.example.examples.quicksort","c":"SorterTask","l":"run()"},{"p":"org.example.examples.quicksort","c":"SharedSortedChecker","l":"SharedSortedChecker()","u":"%3Cinit%3E()"},{"p":"org.example.examples.mergesort","c":"MergeSortListSorter","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.mergesort","c":"MergeSortMultiThread","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.mergesort","c":"MergeSortSingleThread","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.mergesort","c":"MergeSortTwoThreads","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.quicksort","c":"LibSorter","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.quicksort","c":"SorterPool","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.quicksort","c":"SorterPoolLazy","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.quicksort","c":"SorterSingleThread","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples","c":"Sorter","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples","c":"SorterTimeMeasureDecorator","l":"sort(List<T>)","u":"sort(java.util.List)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark","l":"SortBenchmark()","u":"%3Cinit%3E()"},{"p":"org.example.examples.quicksort","c":"SortedChecker","l":"SortedChecker(List<T>, Comparator<T>)","u":"%3Cinit%3E(java.util.List,java.util.Comparator)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.MergeMultiThread","l":"sorter"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.MergeSingleThread","l":"sorter"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.QuickMultiThread","l":"sorter"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.QuickSingleThread","l":"sorter"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.SorterState","l":"sorter"},{"p":"org.example.examples.quicksort","c":"SorterPool","l":"SorterPool(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.quicksort","c":"SorterPoolLazy","l":"SorterPoolLazy(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.quicksort","c":"SorterPoolTask","l":"SorterPoolTask(List<T>, Comparator<T>)","u":"%3Cinit%3E(java.util.List,java.util.Comparator)"},{"p":"org.example.examples.quicksort","c":"SorterPoolTask","l":"SorterPoolTask(List<T>, Partition<T>, int, int)","u":"%3Cinit%3E(java.util.List,org.example.examples.quicksort.Partition,int,int)"},{"p":"org.example.examples.quicksort","c":"SorterPoolTaskLazyThread","l":"SorterPoolTaskLazyThread(List<T>, Comparator<T>, int, int, String)","u":"%3Cinit%3E(java.util.List,java.util.Comparator,int,int,java.lang.String)"},{"p":"org.example.examples.quicksort","c":"SorterSingleThread","l":"SorterSingleThread(Comparator<T>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark.SorterState","l":"SorterState()","u":"%3Cinit%3E()"},{"p":"org.example.examples.quicksort","c":"SorterTask","l":"SorterTask(List<T>, Comparator<T>)","u":"%3Cinit%3E(java.util.List,java.util.Comparator)"},{"p":"org.example.examples.quicksort","c":"SorterTask","l":"SorterTask(List<T>, Partition<T>, int, int)","u":"%3Cinit%3E(java.util.List,org.example.examples.quicksort.Partition,int,int)"},{"p":"org.example.examples","c":"SorterTimeMeasureDecorator","l":"SorterTimeMeasureDecorator(Sorter<T>)","u":"%3Cinit%3E(org.example.examples.Sorter)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark","l":"sortMergeMulti(SortBenchmark.MergeMultiThread)","u":"sortMergeMulti(org.example.examples.benchmark.SortBenchmark.MergeMultiThread)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark","l":"sortMergeSingle(SortBenchmark.MergeSingleThread)","u":"sortMergeSingle(org.example.examples.benchmark.SortBenchmark.MergeSingleThread)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark","l":"sortQuickMulti(SortBenchmark.QuickMultiThread)","u":"sortQuickMulti(org.example.examples.benchmark.SortBenchmark.QuickMultiThread)"},{"p":"org.example.examples.benchmark","c":"SortBenchmark","l":"sortQuickSingle(SortBenchmark.QuickSingleThread)","u":"sortQuickSingle(org.example.examples.benchmark.SortBenchmark.QuickSingleThread)"},{"p":"org.example.examples.mergesort","c":"SortRunnable","l":"SortRunnable(List<T>, Comparator<T>)","u":"%3Cinit%3E(java.util.List,java.util.Comparator)"},{"p":"org.example.examples.mergesort","c":"ListMerger","l":"splitMerge(List<T>)","u":"splitMerge(java.util.List)"},{"p":"org.example.examples.mergesort","c":"TwoThreadsRunnable","l":"TwoThreadsRunnable(List<T>, Comparator<T>)","u":"%3Cinit%3E(java.util.List,java.util.Comparator)"}];updateSearchResults();